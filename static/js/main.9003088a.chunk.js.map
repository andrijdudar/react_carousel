{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","currentImage","setCurrentImage","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","disabled","App","useState","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","htmlFor","id","value","min","max","onChange","event","Number","target","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9003088a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  currentImage:number;\n  setCurrentImage: (value: number) => void;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  currentImage,\n  setCurrentImage,\n}) => {\n  const maxImages = images.length - frameSize;\n\n  function handlePrev() {\n    return (\n      currentImage !== 0\n        ? setCurrentImage(currentImage - step >= 0 ? currentImage - step : 0)\n        : setCurrentImage(maxImages)\n    );\n  }\n\n  function handleNext() {\n    return (\n      currentImage !== maxImages\n        ? setCurrentImage(currentImage + step <= maxImages\n          ? currentImage + step : maxImages)\n        : setCurrentImage(0)\n    );\n  }\n\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImages && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            className=\"Carousel__image\"\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImage * itemWidth)}px)`,\n              transition: `transform ${animationDuration}ms ease 0s`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className={\n            isDisabledPrev\n              ? 'Carousel__btn Carousel__btn--disabled'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          onClick={handlePrev}\n          disabled={isDisabledPrev}\n        >\n          &larr;\n        </button>\n        <button\n          type=\"button\"\n          className={\n            isDisabledNext\n              ? 'Carousel__btn Carousel__btn--disabled'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={isDisabledNext}\n        >\n          &rarr;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n      <div className=\"App__settings\">\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          {'Item Width: '}\n          <input\n            className=\"input\"\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={70}\n            max={260}\n            step={5}\n            onChange={(event) => {\n              setItemWidth(Number(event.target.value));\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          {'Frame Size: '}\n          <input\n            className=\"input\"\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              setFrameSize(Number(event.target.value));\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          {'Step: '}\n          <input\n            className=\"input\"\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={frameSize}\n            onChange={(event) => {\n              setStep(Number(event.target.value));\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animationDurationId\"\n          className=\"App__label\"\n        >\n          {'Animation duration: '}\n          <input\n            className=\"input\"\n            type=\"number\"\n            id=\"animationDurationId\"\n            value={animationDuration}\n            min={0}\n            max={5000}\n            step={500}\n            onChange={(event) => {\n              setAnimationDuration(Number(event.target.value));\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infiniteId\"\n          className=\"App__label\"\n        >\n          Infinite :\n          <input\n            className=\"apple-switch\"\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            onChange={() => setInfinite(!infinite)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n        currentImage={currentImage}\n        setCurrentImage={(v) => setCurrentImage(v)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}